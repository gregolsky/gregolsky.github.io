<?xml version="1.0" encoding="utf-8" ?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel> <title>Grzegorz Lachowski</title><link>http://gregolsky.github.io</link><description>Tech, programming, UX frustrations and a bit of life hacking.</description><atom:link href="http://gregolsky.github.io/feed.xml" rel="self" type="application/rss+xml"></atom:link><item><title>Trying out Harp</title><description><![CDATA[<p>I always wanted to start a blog.</p>
<p>I decided it needs to be an easy to maintain static webpage. It should also support Markdown and I want to build it from ground up learning some cool stuff along the way.</p>
<p>My first idea was to use <a href="http://yeoman.io/">Yeoman</a> to scaffold an app using <code>gulp-webapp</code> generator. Yo gulp-webapp! Done. Please don&#39;t get me wrong - I love <code>gulp-webapp-generator</code> and Yeoman, yet I wasn&#39;t happy about spending next hour on Gulpfile customization, because I am never satisfied with the defaults plus I used it in the past, so there was nothing new to learn. Also time I wanted to get to design and content as quickly as possible. I wanted less configuration, support for the new cool web stuff out-of-the-box and it would be great if it&#39;s Node.js based. And then after some more googling I found <a href="http://harpjs.com/">Harp</a>. Harp among other things is a Node.js-based web server with built-in transpilers for all frontend goodies like template engines (Jade and EJS), CSS preprocessors (SCSS, LESS), Markdown, Coffescript and convention-over-configuration approach. It processes your files on the fly and serves as plain old HTML and CSS.</p>
<p>The 3 main Harp commands I use are <code>init</code>, <code>server</code> and <code>compile</code>. Using <code>init</code> you can scaffold an empty Harp project using the boilerplate of your choice. The <code>server</code> command starts the development server, which I already mentioned (serves and transpiles) and once you are done developing your website you can use the <code>compile</code> command to transpile and minify all your shiny project files, so you can put them on a server for people to see.</p>
<p>While all this automation and conventions are nice, yet I quickly missed my gulp tasks and e.g. browser-sync. But all is not lost, because the internet already thought of that - here&#39;s the <a href="https://gist.github.com/geelen/a5fcb013de67f680cb8d">gist</a> for a Gulpfile combining browser-sync and Harp server. You can now have a Gulp accompanying your Harp setup.</p>
<p>To sum up, I think Harp is a great tool for beginners and people, who value the simplicity and <del>are a bit lazy</del> want to quickly start something skipping the misery of initial project configuration and rely more on predefined conventions. What I can say for sure it&#39;s perfect for small projects (like a static blog), but I suspect once you need some more complex work done, then you are probably going to miss Grunt/Gulp flexibility.</p>
<p>As this blog was created using Harp, do not forget to check out <a href="https://github.com/gregolsky/blog">the source</a> or try Harp on your own. There is a great developer&#39;s guide on Harp&#39;s website and some ready to use recipes like for building a blog. Go check! See ya.</p>
]]></description><pubDate>Sun Aug 30 2015 02:00:00 GMT+0200 (CEST)</pubDate><link>http://gregolsky.github.io/articles/trying-out-harp</link><guid isPermaLink="true">http://gregolsky.github.io/articles/trying-out-harp</guid></item><item><title>Paycode or how to photocode your money transfers</title><description><![CDATA[<p>Returning money you borrowed from a friend is hard, isn&#39;t it? No, I am not going to tackle financial or social reasons for not returning the money. I mean it in a technical kind of way and I think of those little loans we make, when it&#39;s just more practical for one person to pay for the thing and then the others need to return their part. What do we do then?
If we have cash, then we can just use it and be done with this, however I am one of those guys that do not carry cash around. We have cards nowadays right? But you can&#39;t use it to give the money back to your friend. So at minimum you need to:</p>
<ul>
<li>have his name,</li>
<li>have his acc#,</li>
<li>know the amount,</li>
<li>access your bank account to make the money transfer</li>
</ul>
<p>The name and amount are simple to remember, but passing the account number is hard and error prone. Copy pasting does not help much with this. For access to your online bank account you can use your computer or.. your phone. Wait a sec. Can we simplify this? You do pay your bills using <a href="https://en.wikipedia.org/wiki/QR_code">QR codes</a> right? What are QR codes? Here&#39;s <a href="https://en.wikipedia.org/wiki/QR_code">QR code article from Wikipedia</a>. Basically QR code is a little piece of information encoded into <del>an image containing multiple black and white square fields</del> a square barcode. Among other things it can hold your money transfer information. E.g. a money transfer QR code data look like this:</p>
<pre><code>|PL|35000000000000370264110315|010000|Grzegorz Lachowski|transfer title|||
</code></pre><p>And the code itself looks like this:</p>
<center><img src="http://i.imgur.com/QMSXFz2.png" alt="|PL|35000000000000370264110315|010000|Grzegorz Lachowski|transfer title|||" title="Money transfer QR code example"></center>

<p>It is a simple |-separated text format encoded into a barcode. Only required fields have been filled in:</p>
<ul>
<li><code>PL</code> - a country code (ISO 3166-1 alfa-2),</li>
<li><code>35000000000000370274110914</code> - acc# (26 numbers, this one&#39;s fake),</li>
<li><code>010000</code> - amount field (this is the value of 100 zlotys),</li>
<li><code>Grzegorz Lachowski</code> - transfer receiver name,</li>
<li><code>transfer title</code> - transfer title :)</li>
</ul>
<p>Using QR codes for money transfer is very convenient. I pay my bills this way and you should too! Sadly I haven&#39;t seen an option anywhere to create your own money transfer QR codes. That&#39;s why I made PayCode. A little webapp to create your own money transfer QR codes. This is how it works:</p>
<ol>
<li>Go to <a href="http://gregolsky.github.io/paycode/">http://gregolsky.github.io/paycode/</a></li>
<li>Fill in your transfer data - don&#39;t worry it does not save anything anywhere - it&#39;s client-side only.</li>
<li>Click the submit button.</li>
<li>You will be redirected to the unique page with the qr code, for which the link you can pass to your friends.</li>
</ol>
<p>That&#39;s it. It uses qrcode.js library, which uses canvas to generate the code. It&#39;s not perfect yet, but the basic functionality works. I still need to work on multi-lingual support, validation, shortening the unique URL and UTF-8 support in the transfer fields (QR code generation library I use does not support it yet). I hope it helps you in some way. Be sure to check the <a href="https://github.com/gregolsky/paycode">code on my GitHub</a>.</p>
]]></description><pubDate>Wed Nov 11 2015 01:00:00 GMT+0100 (CET)</pubDate><link>http://gregolsky.github.io/articles/paycode</link><guid isPermaLink="true">http://gregolsky.github.io/articles/paycode</guid></item></channel></rss>